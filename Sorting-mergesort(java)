// here are 2 functions mergesort and merge 
// mergesort= divides the given array into subarrays until the get single element as array
// merge combine the divided arrays along with sorthing 
import java.util.Scanner;
public class mergefinal {
	public static void mergeSort(int res[],int low,int high)
	{
		if(low<high){
			int mid=(low+high)/2;
			mergeSort(res,low,mid);
			mergeSort(res,mid+1,high);
			merge(res,low,mid,high);
		}
	}
	public static void merge(int res[],int low,int mid,int high){
		int n=mid-low+1;
		int m=high-mid;
		int a[]=new int[n];
		int b[]=new int[m];
		int i=0;
		int k=low;
		// copying present subarrays to new subarray
		while (i < n) {
			a[i]=res[k];
			i++;
			k++;
		}
		int j=0;
		while(j<m){
			b[j]=res[k];
			j++;
			k++;
		}
		i=0;
		j=0;
		k=low;
		while(i<n&&j<m){
			if(a[i]<b[j]){
				res[k]=a[i];
				i++;
			}
			else {
				res[k] = b[j];
				j++;
			}
			k++;
		}
		while(i<n){
			res[k]=a[i];
			k++;
			i++;
		}
		while(j<m){
			res[k]=b[j];
			j++;
			k++;
		}
	}
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int a[] = new int[n];
		for (int i = 0; i < n; i++) {
			a[i] = sc.nextInt();
		}
		mergeSort(a,0,n-1);
		for (int i = 0; i < n; i++) {
			System.out.print(a[i]+" ");
		}
	}
}
